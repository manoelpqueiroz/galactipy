{% raw %}---
# Settings for generating changelogs using the GitLab API. See
# https://docs.gitlab.com/ee/api/repositories.html#generate-changelog-data for
# more information.
categories:
{%- endraw %}{% if cookiecutter.app_type != 'bare_repo' %}{% raw %}
  # 1. Changes that users directly face
  # Command-line Interface, more specifically the CLI API that bridges the interface to the actual program
  cli: ":satellite_orbital: Command-line Interface"
  command: ":satellite_orbital: Command-line Interface"
  commands: ":satellite_orbital: Command-line Interface"
  terminal: ":satellite_orbital: Command-line Interface"
  output: ":satellite_orbital: Command-line Interface"
  shell: ":satellite_orbital: Command-line Interface"
  # CLI Usage, developments that change how the user interacts with the CLI, like options and arguments
  flag: ":keyboard: CLI Usage"
  flags: ":keyboard: CLI Usage"
  option: ":keyboard: CLI Usage"
  options: ":keyboard: CLI Usage"
  opt: ":keyboard: CLI Usage"
  opts: ":keyboard: CLI Usage"
  argument: ":keyboard: CLI Usage"
  arguments: ":keyboard: CLI Usage"
  arg: ":keyboard: CLI Usage"
  args: ":keyboard: CLI Usage"
  usage: ":keyboard: CLI Usage"
{%- endraw %}{% if cookiecutter.app_type != 'cli' %}{% raw %}
  # User Inteface Improvements, like widgets, screens, layout and readability
  tui: ":computer: User Interface Improvements"
  ui: ":computer: User Interface Improvements"
  layout: ":computer: User Interface Improvements"
  screen: ":computer: User Interface Improvements"
  element: ":computer: User Interface Improvements"
  elements: ":computer: User Interface Improvements"
  panel: ":computer: User Interface Improvements"
  panels: ":computer: User Interface Improvements"
  widget: ":computer: User Interface Improvements"
  widgets: ":computer: User Interface Improvements"
  accessibility: ":computer: User Interface Improvements"
  # User Experience, which encompasses all interaction processes of the user with the TUI, the TUI's behaviour
  ux: ":video_game: User Experience"
  xp: ":video_game: User Experience"
  interaction: ":video_game: User Experience"
  navigation: ":video_game: User Experience"
  nav: ":video_game: User Experience"
  shortcut: ":video_game: User Experience"
  shortcuts: ":video_game: User Experience"
{%- endraw %}{% endif %}{% raw %}
  # Customization
  customization: ":peacock: Customisation"
  customize: ":peacock: Customisation"
  theme: ":peacock: Customisation"
  themes: ":peacock: Customisation"
  theming: ":peacock: Customisation"
  style: ":peacock: Customisation"
  styles: ":peacock: Customisation"
  styling: ":peacock: Customisation"
  # Nudging, developments that help users navigate and use the application with more ease,
  # like tutorials, notifications, command helpers, argument/option groups, help panels etc.
  nudge: ":beginner: Nudging"
  nudges: ":beginner: Nudging"
  nudging: ":beginner: Nudging"
  tutorial: ":beginner: Nudging"
  tutorials: ":beginner: Nudging"
  hint: ":beginner: Nudging"
  hints: ":beginner: Nudging"
  help: ":beginner: Nudging"
  helper: ":beginner: Nudging"
  helpers: ":beginner: Nudging"
  # Extensibility to the application,
  # like entry points, plugin enablers, improvements to type hints
  plugin: ":electric_plug: Extensibility"
  plugins: ":electric_plug: Extensibility"
  hook: ":electric_plug: Extensibility"
  hooks: ":electric_plug: Extensibility"
  event: ":electric_plug: Extensibility"
  events: ":electric_plug: Extensibility"
  entrypoint: ":electric_plug: Extensibility"
  entrypoints: ":electric_plug: Extensibility"
  extension: ":electric_plug: Extensibility"
  extensions: ":electric_plug: Extensibility"
  extend: ":electric_plug: Extensibility"
  scaffold: ":electric_plug: Extensibility"
  scaffolds: ":electric_plug: Extensibility"
  scaffolding: ":electric_plug: Extensibility"
  type: ":electric_plug: Extensibility"
  types: ":electric_plug: Extensibility"
  typing: ":electric_plug: Extensibility"
  # Compatibility & Integrations with external services and tools
  api: ":link: Compatibility & Integrations"
  rest: ":link: Compatibility & Integrations"
  restful: ":link: Compatibility & Integrations"
  integration: ":link: Compatibility & Integrations"
  integrations: ":link: Compatibility & Integrations"
  integrate: ":link: Compatibility & Integrations"
  compatibility: ":link: Compatibility & Integrations"
  compat: ":link: Compatibility & Integrations"
  service: ":link: Compatibility & Integrations"
  services: ":link: Compatibility & Integrations"
  webservice: ":link: Compatibility & Integrations"
  webservices: ":link: Compatibility & Integrations"
  external: ":link: Compatibility & Integrations"
  # Localisation
  localization: ":earth_americas: Localisation"
  localize: ":earth_americas: Localisation"
  translation: ":earth_americas: Localisation"
  translations: ":earth_americas: Localisation"
  translate: ":earth_americas: Localisation"

  # 2. Changes that impact users, but are not directly visible
  # Components in the backend
  component: ":puzzle_piece: Application Components"
  components: ":puzzle_piece: Application Components"
  module: ":puzzle_piece: Application Components"
  modules: ":puzzle_piece: Application Components"
  backend: ":puzzle_piece: Application Components"
  performance: ":puzzle_piece: Application Components"
  improvement: ":puzzle_piece: Application Components"
  improvements: ":puzzle_piece: Application Components"
  improve: ":puzzle_piece: Application Components"
  # Database Changes
  database: ":floppy_disk: Database Changes"
  db: ":floppy_disk: Database Changes"
  data: ":floppy_disk: Database Changes"
  schema: ":floppy_disk: Database Changes"
  # Deprecations & Removals
  deprecation: ":city_dusk: Deprecations & Removals"
  deprecations: ":city_dusk: Deprecations & Removals"
  deprecate: ":city_dusk: Deprecations & Removals"
  removal: ":city_dusk: Deprecations & Removals"
  removals: ":city_dusk: Deprecations & Removals"
  remove: ":city_dusk: Deprecations & Removals"
  sunset: ":city_dusk: Deprecations & Removals"
  # Fixes for wrongful behaviour
  bug: ":toolbox: Fixes"
  bugfix: ":toolbox: Fixes"
  fix: ":toolbox: Fixes"
  hotfix: ":toolbox: Fixes"
  security: ":toolbox: Fixes"
  sec: ":toolbox: Fixes"
  critical: ":toolbox: Fixes"
  leak: ":toolbox: Fixes"
  injection: ":toolbox: Fixes"

  # 3. Changes that are irrelevant to users
  # Codebase Renovation: architectural changes, refactoring and other improvements done under the hood
  architecture: ":factory_worker: Codebase Renovation"
  arch: ":factory_worker: Codebase Renovation"
  refactor: ":factory_worker: Codebase Renovation"
  refactors: ":factory_worker: Codebase Renovation"
  refactoring: ":factory_worker: Codebase Renovation"
  rework: ":factory_worker: Codebase Renovation"
  reworks: ":factory_worker: Codebase Renovation"
  reworking: ":factory_worker: Codebase Renovation"
  plumbing: ":factory_worker: Codebase Renovation"
  # Dependencies
  dependencies: ":up: Dependencies Updates"
  dep: ":up: Dependencies Updates"
  deps: ":up: Dependencies Updates"
  # Build & Release Optimisations: how the project is set up for compilation
  build: ":comet: Build & Release Optimisation"
  building: ":comet: Build & Release Optimisation"
  packaging: ":comet: Build & Release Optimisation"
  script: ":comet: Build & Release Optimisation"
  scripts: ":comet: Build & Release Optimisation"
  ci: ":comet: Build & Release Optimisation"
  workflow: ":comet: Build & Release Optimisation"
  workflows: ":comet: Build & Release Optimisation"
  environment: ":comet: Build & Release Optimisation"
  env: ":comet: Build & Release Optimisation"
  infrastructure: ":comet: Build & Release Optimisation"
  infra: ":comet: Build & Release Optimisation"
  iac: ":comet: Build & Release Optimisation"
  # Design & Validation: code integrity, tests and scenarios in BDD
  design: ":repeat: Design & Validation"
  ideation: ":repeat: Design & Validation"
  test: ":repeat: Design & Validation"
  tests: ":repeat: Design & Validation"
  testing: ":repeat: Design & Validation"
{%- endraw %}{% if cookiecutter.use_bdd %}{% raw %}
  bdd: ":repeat: Design & Validation"
  scenario: ":repeat: Design & Validation"
  scenarios: ":repeat: Design & Validation"
  story: ":repeat: Design & Validation"
  stories: ":repeat: Design & Validation"
{%- endraw %}{% endif %}{% raw %}
  # Developer Experience: changes to internal configuration to standardise and ease development workflow
  dev: ":suspension_railway: Developer Experience"
  devx: ":suspension_railway: Developer Experience"
  devdep: ":suspension_railway: Developer Experience"
  devdeps: ":suspension_railway: Developer Experience"
  pyproject: ":suspension_railway: Developer Experience"
  tool: ":suspension_railway: Developer Experience"
  tools: ":suspension_railway: Developer Experience"
  specification: ":suspension_railway: Developer Experience"
  specifications: ":suspension_railway: Developer Experience"
  spec: ":suspension_railway: Developer Experience"
  specs: ":suspension_railway: Developer Experience"

  # 4. Knowledge Management
  # Formal Documentation
  documentation: ":books: Documentation"
  doc: ":books: Documentation"
  docs: ":books: Documentation"
  # Project Policies
  policy: ":scroll: Project Policies"
  policies: ":scroll: Project Policies"
  rule: ":scroll: Project Policies"
  rules: ":scroll: Project Policies"
  milestone: ":scroll: Project Policies"
  milestones: ":scroll: Project Policies"
  epic: ":scroll: Project Policies"
  epics: ":scroll: Project Policies"
  roadmap: ":scroll: Project Policies"
  template: ":scroll: Project Policies"
  templates: ":scroll: Project Policies"
  templating: ":scroll: Project Policies"
  # Internal improvements to detect and report issues, targeting CI/CD maturity
  monitor: ":gem: Lean Practices Gains"
  monitoring: ":gem: Lean Practices Gains"
  tracker: ":gem: Lean Practices Gains"
  trackers: ":gem: Lean Practices Gains"
  tracking: ":gem: Lean Practices Gains"
  log: ":gem: Lean Practices Gains"
  logs: ":gem: Lean Practices Gains"
  logging: ":gem: Lean Practices Gains"
  alert: ":gem: Lean Practices Gains"
  alerts: ":gem: Lean Practices Gains"
  detection: ":gem: Lean Practices Gains"
  detect: ":gem: Lean Practices Gains"
  diligence: ":gem: Lean Practices Gains"
  rskm: ":gem: Lean Practices Gains"
{%- endraw %}{% else %}{% raw %}
  feature: ":new: Additions"
  add: ":new: Additions"
  added: ":new: Additions"

  change: ":arrow_right: Changes"
  changes: ":arrow_right: Changes"
  changed: ":arrow_right: Changes"
  update: ":arrow_right: Changes"
  updates: ":arrow_right: Changes"
  updated: ":arrow_right: Changes"

  deprecation: ":city_dusk: Deprecations & Removals"
  deprecations: ":city_dusk: Deprecations & Removals"
  deprecate: ":city_dusk: Deprecations & Removals"
  deprecated: ":city_dusk: Deprecations & Removals"
  removal: ":city_dusk: Deprecations & Removals"
  removals: ":city_dusk: Deprecations & Removals"
  remove: ":city_dusk: Deprecations & Removals"
  removed: ":city_dusk: Deprecations & Removals"
  sunset: ":city_dusk: Deprecations & Removals"

  bug: ":toolbox: Fixes"
  bugfix: ":toolbox: Fixes"
  fix: ":toolbox: Fixes"
  fixed: ":toolbox: Fixes"
  hotfix: ":toolbox: Fixes"
  security: ":toolbox: Fixes"
  sec: ":toolbox: Fixes"
  critical: ":toolbox: Fixes"
  leak: ":toolbox: Fixes"
  injection: ":toolbox: Fixes"

  dependencies: ":up: Dependencies Updates"
  dep: ":up: Dependencies Updates"
  deps: ":up: Dependencies Updates"

  documentation: ":books: Documentation"
  doc: ":books: Documentation"
  docs: ":books: Documentation"

  other: ":black_circle: Other Developments"
{%- endraw %}{% endif %}{% raw %}
template: |
  {% if categories %}
  {% each categories %}
  ### {{ title }} ({% if single_change %}1 change{% else %}{{ count }} changes{% end %})

  {% each entries %}
  - [{{ title }}]({{ commit.reference }})\
  {% if author.credit %} by {{ author.reference }}{% end %}\
  {% if commit.trailers.MR %} ([merge request]({{ commit.trailers.MR }}))\
  {% else %}\
  {% if merge_request %} ([merge request]({{ merge_request.reference }}))\
  {% end %}\
  {% end %}

  {% end %}

  {% end %}
  {% else %}
  No changes detailed for this release.
  {% end %}{% endraw %}
