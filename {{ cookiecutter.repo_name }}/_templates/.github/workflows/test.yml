{%- set list_python_version = cookiecutter.minimal_python_version.split('.') | map('int') | list %}
# Check GitHub Actions documentation at:
# https://github.com/marketplace/actions/pypi-publish
{% raw %}# UPDATEME to suit your project's workflow
name: 🧪 Test

on: pull_request

jobs:
  test:
    name: Repository Checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [{% endraw %}{% for version in cookiecutter._all_python_version if version[0] >= list_python_version[0] and version[1] >= list_python_version[1] %}"{{ version[0] }}.{{ version[1] }}"{% if not loop.last %}, {% endif %}{% endfor %}{% raw %}]

    steps:
    - uses: actions/checkout@v2
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.2.2
      with:
        python-version: ${{ matrix.python-version }}

    - name: 💽 Install Invoke
      run: pip install invoke

    - name: 💽 Install poetry
      run: invoke poetry-download

    - name: 🫙 Set up cache
      uses: actions/cache@v2.1.6
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

    - name: 📥 Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: ✒️ Run style checks
      run: |
        invoke codestyle --check
        invoke check-linter

    - name: ☑️ Run tests
      run: invoke test

    - name: 👮 Run safety checks
      run: invoke check-safety{% endraw %}
