# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
# UPDATEME to suit your project's workflow
# General pipeline configuration
stages:
  - test
  - build
  - deploy

variables:
  SEMVER_RELEASE_VERSION: /^(v)?(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/i
  SEMVER_NONRELEASE_VERSION: /^(v)?(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-z-][0-9a-z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-z-][0-9a-z-]*))*))?(?:\+([0-9a-z-]+(?:\.[0-9a-z-]+)*))?$/i

default:
  image: python:{{ cookiecutter.minimal_python_version }}
  cache:
    key: venv-$CI_COMMIT_REF_NAME-$CI_JOB_STAGE-$CI_COMMIT_SHA
    paths:
      - $CI_PROJECT_DIR/.cache/pip

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

# Anchors for common commands
.env_setup: &env_setup
    - pip install invoke
    - invoke poetry-download
    - export PATH="/root/.local/bin:$PATH"
    - python3 -m venv .venv
    - source .venv/bin/activate
    - pip install -U pip
    - invoke install --ignore-pty

.test_scripts: &test_scripts
  - invoke codestyle --check
  - invoke check-linter
  - invoke test
  - invoke check-safety

# Jobs
{%- set list_python_version = cookiecutter.minimal_python_version.split('.') | map('int') | list %}
{%- for version in cookiecutter._all_python_version if version[0] >= list_python_version[0] and version[1] >= list_python_version[1] %}

test-py{{ version[0] }}{{ version[1] }}:
  stage: test
  image: python:{{ version[0] }}.{{ version[1] }}
  script:
    - *env_setup
    - *test_scripts
{%- endfor %}

build-test:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG =~ $SEMVER_NONRELEASE_VERSION && $CI_COMMIT_TAG !~ $SEMVER_RELEASE_VERSION
  artifacts:
    paths:
      - dist/
  script:
    - invoke build

build-prod:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG =~ $SEMVER_RELEASE_VERSION
  artifacts:
    paths:
      - dist/
  script:
    - invoke build

deploy-test:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG =~ $SEMVER_NONRELEASE_VERSION && $CI_COMMIT_TAG !~ $SEMVER_RELEASE_VERSION
  dependencies:
    - build-test
  script:
    # UPDATEME by setting the TESTPYPI_TOKEN variable in {{ cookiecutter.__scm_link_url }}/settings/ci_cd
    - invoke pypi-config $TESTPYPI_TOKEN --repo testpypi
    - invoke publish --repo testpypi --no-build

deploy-prod:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG =~ $SEMVER_RELEASE_VERSION
  dependencies:
    - build-prod
  script:
    # UPDATEME by setting the PYPI_TOKEN variable in {{ cookiecutter.__scm_link_url }}/settings/ci_cd
    - invoke pypi-config $PYPI_TOKEN
    - invoke publish --no-build
