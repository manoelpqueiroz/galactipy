# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
stages:
  - test
  - coverage
  - release

workflow:
  rules:
    - if: $CI_COMMIT_TITLE =~ /(\:construction|WIP)\:.*/i
      when: never
    - if: $GITLAB_USER_LOGIN =~ /^project_\d+_bot_\w+/i
    - if: $CI_COMMIT_TAG =~ /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/i
    - if: $CI_COMMIT_BRANCH

default:
  image: python:3.13
  cache:
    key: venv-$CI_COMMIT_REF_NAME-$CI_JOB_STAGE-$CI_COMMIT_SHA
    paths:
      - $CI_PROJECT_DIR/.cache/pip

.python_setup:
  before_script:
    - pip install invoke
    - invoke poetry-download
    - export PATH="/root/.local/bin:$PATH"
    - python3 -m venv .venv
    - source .venv/bin/activate
    - pip install -U pip
    - invoke install --ignore-pty

.default_scripts: &default_scripts
  - invoke check-linter
  - invoke test
  - invoke check-safety

test-py310:
  stage: test
  image: python:3.10
  extends: .python_setup
  script:
    - *default_scripts

test-py311:
  stage: test
  image: python:3.11
  extends: .python_setup
  script:
    - *default_scripts

test-py312:
  stage: test
  image: python:3.12
  extends: .python_setup
  script:
    - *default_scripts

test-py313:
  stage: test
  artifacts:
    name: coverage_$CI_COMMIT_REF_NAME_$CI_JOB_NAME_$CI_JOB_STARTED_AT
    paths:
      - coverage.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    expire_in: 1 week
  extends: .python_setup
  script:
    - *default_scripts
    - coverage xml

coveralls-report:
  stage: coverage
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - curl -L https://coveralls.io/coveralls-linux.tar.gz | tar -xz -C /usr/local/bin
    - coveralls -f coverage.xml -r $COVERALLS_TOKEN

changelog-build:
  stage: release
  image: alpine:latest
  rules:
    - if: $CI_COMMIT_TAG =~ /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/i
  script:
    - apk add curl jq
    - >
      curl
      --header "PRIVATE-TOKEN: $CI_API_TOKEN"
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG"
      |
      jq --raw-output .notes > RELEASE_NOTES.md
  artifacts:
    paths:
    - RELEASE_NOTES.md

changelog-commit:
  stage: release
  image: alpine:latest
  rules:
    - if: $CI_COMMIT_TAG =~ /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/i
  needs: [changelog-build]
  variables:
    CHANGELOG_COMMIT_MESSAGE: '%3Abookmark%3A%20Update%20CHANGELOG.md'
  script:
    - >
      curl
      --header "PRIVATE-TOKEN: $CI_API_TOKEN"
      --request POST
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG&message=$CHANGELOG_COMMIT_MESSAGE"

release-galactipy:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG =~ /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/i
  needs: [changelog-build]
  script:
    - echo "Creating release $CI_COMMIT_TAG"
  release:
    tag_name: $CI_COMMIT_TAG
    description: RELEASE_NOTES.md
